#!/bin/sh
#
# git autodeploy script when it matches the string "[deploy]"
#
# @author    icyleaf <icyleaf.cn@gmail.com>
# @link      http://icyleaf.com
# @version   0.1
#
# Usage:
#       1. put this into the post-receive hook file itself below
#       2. `chmod +x post-recive` 
#       3. Done!
 
# Check the remote git repository whether it is bare
IS_BARE=$(git rev-parse --is-bare-repository)
if [ -z "$IS_BARE" ]; then
    echo >&2 "fatal: post-receive: IS_NOT_BARE"
    exit 1
fi

# read what branch and commit was pushed
read oldrev newrev ref
BRANCH=$(echo $ref | awk -F/ '{print $3}')
 
# Get the latest commit subject
SUBJECT=$(git log -1 $BRANCH --pretty=format:"%s")
#LAST_COMMIT=$(git log -1 $BRANCH --pretty=format:"%H")
LAST_COMMIT=$newrev
DEPLOY_DIR=../deploy
GIT_SERVER_PATH=$(pwd)
if [ -f ../conf.rc ]; then
	source ../conf.rc
else
	echo "fatal:please put conf.rc in $(pwd)/../"
	exit 1
fi

if [[ -z $SERVER_DIR ]]; then
	echo "fatal:please write SERVER_DIR in conf.rc"
	exit 1
fi

echo "------------------[notice]----------------"
echo "you just pushed to branch $BRANCH"
echo "subject: $SUBJECT"
echo "commit: $LAST_COMMIT"
echo "git server path: $GIT_SERVER_PATH" 
echo "web server path: $SERVER_DIR"
echo "src path: $DEPLOY_DIR"
echo "------------------------------------------"

# Goto the deploy dir and pull the latest sources
mkdir -p $DEPLOY_DIR
cd $DEPLOY_DIR
echo "[info] goto deploy dir: $DEPLOY_DIR"
if [ ! -d .git ]; then
	env -i git init
	env -i git remote add origin $GIT_SERVER_PATH
fi
env -i git reset --hard
env -i git fetch origin 
env -i git checkout $LAST_COMMIT

#make package
echo "[info] making package:"
if [[ -f ./deploy/deploy-test.sh && -f ./deploy/get_package.sh ]]; then
	./deploy/deploy-test.sh &&
	PACKAGE=$(./deploy/get_package.sh) &&
    cp $PACKAGE $SERVER_DIR/webapps
else
	echo "fatal:don't have deploy/deploy-test.sh or get_package.sh to execute"
	exit 1
fi

#copy package to server path
cd $SERVER_DIR
if [ -n "`ls bin | grep resin`" ]; then
	echo "[info] restarting resin"
    ./bin/resin.sh restart
elif [ -n "`ls bin | grep tomcat`" ]; then
	echo "[info] restarting tomcat"
    ./bin/stop.sh && ./bin/start.sh
else
	echo "fatal:don't know what server it is"
fi
